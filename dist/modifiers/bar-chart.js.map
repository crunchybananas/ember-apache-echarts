{"version":3,"file":"bar-chart.js","sources":["../../src/modifiers/bar-chart.ts"],"sourcesContent":["import { tracked } from '@glimmer/tracking';\n// @ts-expect-error: follow up on this\nimport { compact, countBy, flatten } from 'lodash-es';\nimport { type ECharts } from 'echarts/core';\nimport mergeAtPaths from '../utils/merge-at-paths.ts';\nimport parseAxisLabel from '../utils/chart/parse-axis-label.ts';\nimport computeStatistic from '../utils/data/compute-statistic.ts';\nimport getSeriesData from '../utils/data/get-series-data.ts';\nimport getSeriesTotals from '../utils/data/get-series-totals.ts';\nimport getUniqueDatasetValues from '../utils/data/get-unique-dataset-values.ts';\nimport rotateDataSeries from '../utils/data/rotate-data-series.ts';\nimport computeMaxTextMetrics from '../utils/layout/compute-max-text-metrics.ts';\nimport computeTextMetrics from '../utils/layout/compute-text-metrics.ts';\nimport resolveStyle from '../utils/style/resolve-style.ts';\nimport AbstractChartModifier from './abstract-chart.ts';\nimport * as echarts from 'echarts/core';\n\ntype Variant =\n  | 'bar'\n  | 'line'\n  | 'area'\n  | 'groupedBar'\n  | 'groupedLine'\n  | 'stackedBar'\n  | 'stackedArea';\n\ntype AxisConfig = {\n  type: string;\n  axisLabel?: {\n    showMinLabel?: boolean;\n    showMaxLabel?: boolean;\n  };\n};\n\nconst DEFAULT_CATEGORY_PROPERTY = 'name';\nconst DEFAULT_VALUE_PROPERTY = 'value';\n\n// TODO: Import only the required components to keep the bundle size small. See\n//       https://echarts.apache.org/handbook/en/basics/import/ [twl 6.Apr.22]\n// @ts-expect-error: follow up on this\nconst setItemColor = (colorMap, item, color: string) =>\n  !colorMap?.[color]\n    ? item\n    : {\n        ...item,\n        itemStyle: {\n          color: colorMap[color],\n        },\n      };\n\nconst isShowingAxisLabel = (axisConfig: AxisConfig, labelType: 'Min' | 'Max') =>\n  axisConfig.axisLabel?.[`show${labelType}Label`] === false ||\n  (axisConfig.type === 'time' && axisConfig.axisLabel?.[`show${labelType}Label`] !== true);\n// @ts-expect-error: follow up on this\nconst computeData = (data, categories, args) => {\n  const { categoryProperty = DEFAULT_CATEGORY_PROPERTY } = args;\n  const { categoryAxisType, orientation } = args;\n  // @ts-expect-error: follow up on this\n  const series = getSeriesData(data, categories, categoryProperty);\n\n  return categoryAxisType !== 'time'\n    ? series\n    : // @ts-expect-error: follow up on this\n      series.map((item) => ({\n        ...item,\n        value: orientation === 'horizontal' ? [item.value, item.name] : [item.name, item.value],\n      }));\n};\n\ntype ChartArgs = {\n  tooltipFormatter?: (params: unknown) => string;\n  onSelect?: (name: string | null) => void;\n  data: unknown[];\n  series?: unknown[];\n  rotateData?: boolean;\n  categoryProperty?: string;\n  valueProperty?: string;\n  variant?: Variant;\n  categoryAxisScale?: 'shared' | 'separate';\n  valueAxisScale?: 'shared' | 'separate';\n  categoryAxisType?: 'category' | 'time';\n  categoryAxisSort?: 'firstSeries' | 'asc' | 'desc' | ((a: string, b: string) => number);\n  missingCategoryFormat?: string;\n  missingValueFormat?: string;\n  drillUpButtonText?: string;\n  title?: string;\n};\n\n/**\n * Renders one or more bar charts.\n *\n * # Arguments\n *\n * ## Data\n *\n * `data`\n * : An array of data objects, where each data object has a category property\n *   (e.g., `name`) and a value property (e.g., `value`).\n *\n * `series`\n * : An array of data series, where each series has a label defined using the\n *   `label` or `name` property, data contained in the `data` property (see\n *   `data` argument above for the format) and an optional `series` property\n *   which contains an array of drillable child series. When the `series`\n *   argument is present, the `data` argument is ignored.\n *\n * `rotateData`\n * : Rotates the data series so the \"columns\" become the \"rows\" and the \"rows\"\n *   become the \"columns\". For hierarchical series, the names/labels of each\n *   data item within each series will each become their own series, while the\n *   original series labels are used to label the values.\n *\n * `categoryProperty`\n * : The name of the property within the data to use as the category for each\n *   data point.\n *\n * `valueProperty`\n * : The name of the property within the data to use as the value for each data\n *   point.\n *\n *\n * ## Chart Layout\n *\n * `chartStyle`\n * : CSS properties for the entire chart including background color, border,\n *   margins and padding.\n *\n * `chartTitleStyle`\n * : CSS properties for the title for the entire chart including color, font,\n *   background color, border and alignment.\n *\n * `maxColumns`\n * : The maximum number of columns to render when rendering more than one series\n *\n *\n *  ## Plots\n *\n * `variant`\n * : Which style chart to render: `bar`, `line`, `area`, `groupedBar`,\n *   `groupedLine`, `stackedBar` or `stackedArea`\n *\n * `orientation`\n * : Which orientation to render the value axes: `vertical` (default) or\n *   `horizontal`\n *\n * `colorMap`\n * : A hash that maps series names to the colors to use for the data items in\n *   those series\n *\n * `cellStyle`\n * : CSS properties defining the style for individual plots when rendering more\n *   than one series\n *\n * `cellTitleStyle`\n * : CSS properties defining the style for the titles for individual plots when\n *   rendering more than one series\n *\n * `plotStyle`\n * : CSS properties defining the style of the plot (area defined by the axes)\n *\n * `seriesConfig`\n * : A hash of EChart render properties for the `variant`. Use for properties\n *   not yet supported by this chart natively. Properties used by this chart\n *   internally are not supported.\n *\n *\n * ## Axes\n *\n * `categoryAxisScale`, `valueAxisScale`\n * : Whether to use a shared axis for all plots that accounts for the data\n *   across all series, or use a separate axis for each plot that only uses\n *   that plot's data. Valid values are: `shared`, `separate` (default)\n *\n * `categoryAxisType`\n * : The type of axis the category axis represents: `category` (default) or\n *   `time`. If set to `time`, the categories must either be `Date` objects or\n *   Unix timestamps.\n *\n * `categoryAxisSort`\n * : How to sort the labels on the category axis: `firstSeries` (default),\n *   `asc`, `desc` or a custom sort function. By default, the sort order of the\n *   labels for the data in the first series is used.\n *\n * `categoryAxisMaxLabelCount`\n * : The maximum number of categories to show on the category axis. The number\n *   of actual labels rendered may be lower than this; this merely sets the\n *   maximum number so labels are not too thin.\n *\n * `valueAxisMax`\n * : The maximum value of the value axis. Valid values are: a specific number,\n *   `dataMax` or `dataMaxRoundedUp` (default). `dataMaxRoundedUp` is only\n *   supported when `valueAxisScale` is `separate` and rounds the data maximum\n *   up so the axis ticks are evenly distributed on the value axis.\n *\n * `categoryAxisFormatter`, `valueAxisFormatter`\n * : Functions used to format the values for the category or value axis,\n *   respectively. Passed the value to be formatted, the type of element the\n *   value is being formatted for (`axis`, `itemTooltip`, `axisTooltip`) and for\n *   axis elements, the index of the axis.\n *\n * `missingCategoryFormat`, `missingValueFormat`\n * : The text to use when the category or value is missing, i.e., an empty\n *   string, undefined or null. If not defined, then the category or value is\n *   passed into either `categoryAxisFormatter` or `valueAxisFormatter`,\n *   respectively, to be formatted\n *\n * `xAxisStyle`\n * : CSS properties defining the style for horizontal X axis, regardless of the\n *   value of `orientation`\n *\n * `yAxisStyle`\n * : CSS properties defining the style for vertical Y axis, regardless of the\n *   value of `orientation`\n *\n * `xAxisPointer`, `yAxisPointer`\n * : The style to use for an axis pointer: `line`, `shadow`, `none` (default)\n *\n * `xAxisPointerLabel`\n * : Whether and where to display the label for the X axis pointer:\n *   `bottom` (default), `top`, `none`\n *\n * `yAxisPointerLabel`\n * : Whether and where to display the label for the Y axis pointer:\n *   `left` (default), `right`, `none`\n *\n * `xAxisPointerStyle`, `yAxisPointerStyle`\n * : CSS properties defining the style of an axis pointer including border &\n *   opacity if using `line` as the pointer or background color & opacity if\n *   using `shadow` as the pointer.\n *\n * `xAxisPointerLabelStyle`, `yAxisPointerLabelStyle`\n * : CSS properties defining the style of an axis pointer label.\n *\n * `xAxisTooltip`\n * : Whether the tooltip for the X axis should be shown near the pointer when\n *   it's active. Defaults to `true`\n *\n * `yAxisTooltip`\n * : Whether the tooltip for the Y axis should be shown near the pointer when\n *   it's active. Defaults to `false`\n *\n *\n * ## Legend\n *\n * `legend`\n * : Whether and where to display a legend: `none`, `top`, `bottom`, `left`,\n *   `right`, `topLeft`, `topRight`, `bottomLeft`, `bottomRight`, `leftTop`,\n *   `leftBottom`, `rightTop`, `rightBottom`\n *\n * `legendOrientation`\n * : Which orientation to render the legend: `horizontal`, `vertical` or `auto`\n *   (default), where `auto` renders the legend horizontally when positioned\n *   on the top or bottom of the chart, and vertically when positioned on the\n *   left or right of the chart\n *\n * `legendStyle`\n * : CSS properties for the chart legend including color, font, background\n *   color, border and alignment.\n *\n *\n * ## Data Zoom\n *\n * `xAxisZoom`\n * : Whether and where to display a data zoom control for the X axis: `top`,\n *   `bottom`, `none` (default)\n *\n * `xAxisZoomBrush`\n * : Whether to enable brush select for the X axis data zoom control. Defaults\n *   to `false`\n *\n * `xAxisStyle`\n * : CSS properties defining the style for the the X axis data zoom control\n *\n * `yAxisZoom`\n * : Whether and where to display a data zoom control for the Y axis: `top`,\n *   `bottom`, `none` (default)\n *\n * `yAxisZoomBrush`\n * : Whether to enable brush select for the Y axis data zoom control. Defaults\n *   to `false`\n *\n * `yAxisStyle`\n * : CSS properties defining the style for the the Y axis data zoom control\n *\n *\n * ## Data Drilling\n *\n * `drillUpButtonStyle`\n * : CSS properties defining the style of the drill up button\n *\n * `drillUpButtonText`\n * : The text of the drill up button. Defaults to `<`.\n *\n *\n * ## Tooltips\n *\n * `tooltipFormatter`\n * : The function used to generate the tool tip\n *\n *\n * ## Events\n *\n * `onSelect`\n * : Called when an element on a chart is selected\n */\nexport default class BarChartModifier extends AbstractChartModifier {\n  @tracked drillPath = [];\n\n  get defaultStyles() {\n    const styles = super.defaultStyles;\n\n    return {\n      ...styles,\n      plot: {},\n      xAxis: {\n        font: 'normal 12px Montserrat,sans-serif',\n        textAlign: 'center',\n        marginTop: 8,\n      },\n      yAxis: {\n        font: 'normal 12px Montserrat,sans-serif',\n        textAlign: 'right',\n        marginRight: 8,\n      },\n      xAxisPointer: {\n        border: 'dashed 1px #555',\n        backgroundColor: '#ccc',\n        opacity: '0.5',\n      },\n      yAxisPointer: {\n        border: 'dashed 1px #555',\n        backgroundColor: '#ccc',\n        opacity: '0.5',\n      },\n      xAxisPointerLabel: {\n        color: '#000',\n        font: 'normal 12px Montserrat,sans-serif',\n        backgroundColor: '#eee',\n        border: 'solid 1px #999',\n        borderRadius: 0,\n        padding: 4,\n        margin: 4,\n      },\n      yAxisPointerLabel: {\n        color: '#000',\n        font: 'normal 12px Montserrat,sans-serif',\n        backgroundColor: '#eee',\n        border: 'solid 1px #999',\n        borderRadius: 0,\n        padding: 4,\n        marginRight: 4,\n      },\n      drillUpButton: {\n        margin: 0,\n        color: '#000',\n        font: 'normal 22px Montserrat,sans-serif',\n        marginRight: 10,\n      },\n    };\n  }\n\n  isGroupedVariant(variant: Variant) {\n    return ['groupedBar', 'groupedLine'].includes(variant);\n  }\n\n  isStackedVariant(variant: Variant) {\n    return ['stackedArea', 'stackedBar'].includes(variant);\n  }\n\n  isBarVariant(variant: Variant) {\n    return ['bar', 'groupedBar', 'stackedBar'].includes(variant ?? 'bar');\n  }\n\n  isAreaVariant(variant: Variant) {\n    return ['area', 'stackedArea'].includes(variant);\n  }\n\n  /**\n   * Returns the categories used within the data series in render order.\n   */\n  // @ts-expect-error: follow up on this\n  getCategories(args, series) {\n    const { categoryAxisSort = 'firstSeries', categoryAxisType } = args;\n    const { categoryProperty = DEFAULT_CATEGORY_PROPERTY } = args;\n    const categories = getUniqueDatasetValues(series, categoryProperty);\n\n    if (categoryAxisSort !== 'firstSeries') {\n      if (categoryAxisSort === 'asc') {\n        categories.sort();\n      } else if (categoryAxisSort === 'desc') {\n        categories.sort().reverse();\n      } else if (typeof categoryAxisSort === 'function') {\n        categories.sort(categoryAxisSort);\n      } else {\n        console.warn(`Invalid 'categoryAxisSort' value: ${categoryAxisSort}`);\n      }\n    } else if (categoryAxisType === 'time') {\n      categories.sort((date1, date2) => (date1?.valueOf() ?? 0) - (date2?.valueOf() ?? 0));\n    }\n\n    return categories;\n  }\n\n  /**\n   * Formats the `name` and `value` within `params` when a category or value\n   * formatter are defined, respectively.\n   */\n  // @ts-expect-error: follow up on this\n  formatTooltipParams(args, params, elementType) {\n    const { valueAxisFormatter = echarts.format.addCommas } = args;\n    const { categoryAxisType, categoryAxisFormatter, orientation } = args;\n    const { missingCategoryFormat, missingValueFormat } = args;\n\n    // The `time` axis requires tuples for the `value`; reverse this before\n    // passing into the tooltip, however. Note that this also modifies\n    // `params.data.value` since it's the same array instance\n    if (categoryAxisType === 'time') {\n      params.value = params.value[orientation === 'horizontal' ? 0 : 1];\n    }\n\n    // prettier not formatting nested ternaries properly, so turn it off\n    // prettier-ignore\n    return {\n      ...params,\n      value:\n        !params.value && missingValueFormat != null\n          ? missingValueFormat\n          : valueAxisFormatter\n            ? valueAxisFormatter(params.value, elementType)\n            : params.value,\n      category:\n        !params.name && missingCategoryFormat != null\n          ? missingCategoryFormat\n          : categoryAxisFormatter\n            ? categoryAxisFormatter(params.name, elementType)\n            : params.name,\n    };\n  }\n  // @ts-expect-error: follow up on this\n  configureChart(args: ChartArgs, chart: ECharts) {\n    const allSeries = args.series ?? [{ data: args.data }];\n    const { categoryAxisScale, tooltipFormatter, onSelect } = args;\n    // @ts-expect-error: follow up on this\n    const { config, context } = this.buildLayout(args, chart);\n\n    chart.setOption(\n      {\n        ...config,\n        tooltip: {\n          trigger: 'item',\n          ...(tooltipFormatter && {\n            formatter: (params: unknown[]) =>\n              tooltipFormatter(\n                params.length != null\n                  ? params.map((param) => this.formatTooltipParams(args, param, 'axisTooltip'))\n                  : this.formatTooltipParams(args, params, 'itemTooltip'),\n                // @ts-expect-error: follow up on this\n                context.data.dataset\n              ),\n          }),\n        },\n      },\n      {\n        notMerge: true,\n      }\n    );\n\n    chart.on('selectchanged', (event) => {\n      // @ts-expect-error: follow up on this\n      const { fromAction, fromActionPayload, isFromClick } = event;\n\n      if (!isFromClick) {\n        return;\n      }\n\n      const seriesIndex = fromActionPayload['seriesIndex'];\n      const dataIndex = fromActionPayload['dataIndexInside'];\n      const series = allSeries[seriesIndex];\n      // NOTE: `dataIndex` isn't actually the data index. It's the index of the\n      //       category on the X axis. Thus we need to look up the value based\n      //       on how the axis is being rendered. [twl 20.Jul.22]\n      const name =\n        categoryAxisScale === 'shared'\n          ? // @ts-expect-error: follow up on this\n            context.data.categories[dataIndex]\n          : // @ts-expect-error: follow up on this\n            series.data[dataIndex]\n            ? // @ts-expect-error: follow up on this\n              series.data[dataIndex][args.categoryProperty ?? DEFAULT_CATEGORY_PROPERTY]\n            : null;\n\n      if (name) {\n        chart.dispatchAction({\n          type: fromAction,\n          name,\n        });\n      }\n\n      onSelect && onSelect(fromAction === 'select' ? name : null);\n    });\n\n    // Change the default behavior of how selections work on the legend\n    // @ts-expect-error: follow up on this\n    chart.on('legendselectchanged', ({ name, selected }) => {\n      const selections = Object.values(selected);\n      const counts = countBy(selections);\n\n      // If the only one selected is the one that just changed, or if nothing is\n      // selected, then invert the selection\n      if ((counts.false === 1 && selected[name] === false) || counts.false === selections.length) {\n        chart.dispatchAction({\n          type: 'legendInverseSelect',\n        });\n      }\n    });\n\n    // Handle the drill in action\n    chart.on('dblclick', ({ seriesIndex }) => {\n      // @ts-expect-error: follow up on this\n      if (context.data.dataset[seriesIndex].series) {\n        // @ts-expect-error: follow up on this\n        this.drillPath.pushObject(seriesIndex);\n      }\n    });\n  }\n\n  /**\n   * Generates the `data` section of the context used to construct this chart.\n   */\n  // @ts-expect-error: follow up on this\n  createContextData(args) {\n    const context = super.createContextData(args);\n    const { rotateData, categoryAxisScale, valueAxisScale } = args;\n    const { categoryProperty = DEFAULT_CATEGORY_PROPERTY } = args;\n    const { valueProperty = DEFAULT_VALUE_PROPERTY } = args;\n    const seriesData = rotateData\n      ? rotateDataSeries(context.series, categoryProperty, valueProperty)\n      : context.series;\n    const { series, title } = this.drillPath.reduce(\n      ({ series }, pathIndex) => ({\n        // @ts-expect-error: follow up on this\n        series: series[pathIndex].series,\n        // @ts-expect-error: follow up on this\n        title: series[pathIndex].label,\n      }),\n      { series: seriesData, title: args.title }\n    );\n\n    return {\n      ...context,\n      ...(categoryAxisScale === 'shared' && {\n        categories: this.getCategories(args, context.series),\n      }),\n      ...(valueAxisScale === 'shared' && {\n        // @ts-expect-error: follow up on this\n        minValue: computeStatistic(context.series, 'min'),\n        // @ts-expect-error: follow up on this\n        maxValue: computeStatistic(context.series, 'max'),\n      }),\n      // If grouped or stacked, render multple series on a single chart rather\n      // than one chart per series\n      series:\n        this.isStackedVariant(args.variant) || this.isGroupedVariant(args.variant)\n          ? [{ data: series }]\n          : series,\n      dataset: series,\n      title,\n    };\n  }\n\n  /**\n   * Adds the title to `config` as defined in the data or by `args` and returns\n   * the new context layout.\n   */\n  // @ts-expect-error: follow up on this\n  addTitle(context, config) {\n    const buttonLayout = this.addDrillUpButton(context, config);\n    const buttonWidth = context.layout.width - buttonLayout.width;\n    const buttonHeight = context.layout.height - buttonLayout.height;\n\n    const titleLayout = super.addTitle(\n      {\n        ...context,\n        args: {\n          ...context.args,\n          title: context.data.title ?? context.args.title,\n        },\n      },\n      config\n    );\n\n    if (config.title?.[0]) {\n      const titleHeight = context.layout.height - titleLayout.height;\n\n      if (buttonHeight > titleHeight) {\n        const heightDifference = buttonHeight - titleHeight;\n\n        titleLayout.height -= heightDifference;\n        titleLayout.y += heightDifference;\n\n        // Center the title within the height of the button\n        config.title[0].top = config.title[0].top / 2 + heightDifference / 2;\n      }\n\n      config.title[0].left += buttonWidth;\n    }\n\n    return titleLayout;\n  }\n\n  /**\n   * Adds the drill up button to `config` and returns the new context layout.\n   */\n  // @ts-expect-error: follow up on this\n  addDrillUpButton(context, config) {\n    if (!this.drillPath.length) {\n      return context.layout;\n    }\n\n    const { layout, args, styles } = context;\n    const { drillUpButtonText = '<' } = args;\n    const style = resolveStyle(styles.drillUpButton, layout);\n    const titleStyle = resolveStyle(styles.chartTitle, layout);\n    const xMargins = style.marginLeft + style.marginRight;\n    const yMargins = style.marginTop + style.marginBottom;\n\n    // Ensure the button aligns with where the title is positioned\n    style.marginTop += titleStyle.marginTop;\n    style.marginLeft += titleStyle.marginLeft;\n\n    const buttonConfig = this.generateDrillUpButtonConfig(drillUpButtonText, layout, style);\n\n    mergeAtPaths(config, [buttonConfig]);\n    // @ts-expect-error: follow up on this\n    const buttonBox = buttonConfig['graphic.elements'][0].children[0].shape;\n\n    return {\n      ...layout,\n      width: layout.width - (buttonBox?.width ?? 0) - xMargins,\n      height: layout.height - (buttonBox?.height ?? 0) - yMargins,\n      x: layout.x + (buttonBox?.width ?? 0) + xMargins,\n      y: layout.y + (buttonBox?.height ?? 0) + yMargins,\n    };\n  }\n\n  /**\n   * Generates the configuration for the drill up button.\n   */\n  // @ts-expect-error: follow up on this\n  generateDrillUpButtonConfig(text: string, layout, style) {\n    const textMetrics = computeTextMetrics(text, style);\n\n    return {\n      'graphic.elements': [\n        {\n          type: 'group',\n          left: style.marginLeft,\n          top: style.marginTop,\n          children: [\n            // NOTE: This element is referenced by path in `addDrillUpButton`\n            {\n              type: 'rect',\n              shape: {\n                width: textMetrics.width + style.paddingLeft + style.paddingRight,\n                height: textMetrics.fontHeight + style.paddingTop + style.paddingBottom,\n                r: [\n                  style.borderTopLeftRadius ?? 0,\n                  style.borderTopRightRadius ?? 0,\n                  style.borderBottomRightRadius ?? 0,\n                  style.borderBottomLeftRadius ?? 0,\n                ],\n              },\n              style: {\n                stroke: style.borderColor ?? '#fff',\n                fill: style.backgroundColor ?? '#fff',\n              },\n            },\n            {\n              type: 'text',\n              x: style.paddingLeft,\n              y: style.paddingTop,\n              style: {\n                fill: style.color,\n                text,\n                font: `${style.fontStyle} ${style.fontWeight} ${style.fontSize}px ${style.fontFamily}`,\n              },\n              textConfig: {\n                distance: 0,\n                inside: true,\n                position: [10, 0],\n              },\n            },\n          ],\n          // @ts-expect-error: follow up on this\n          onclick: () => this.drillPath.popObject(),\n        },\n      ],\n    };\n  }\n\n  /**\n   * Returns the labels for the legend.\n   */\n  // @ts-expect-error: follow up on this\n  getLegendLabels(series, args) {\n    if (!this.isStackedVariant(args.variant) && !this.isGroupedVariant(args.variant)) {\n      return super.getLegendLabels(series, args);\n    }\n\n    // Grouped and stacked datasets may have a dummy root node\n    // @ts-expect-error: follow up on this\n    return series[0].data.map((info) => info.label ?? info.name);\n  }\n\n  /**\n   * Calculate the categories and range used for the category axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeCategoryInfo(series, context) {\n    const { args, data } = context;\n    const { variant, categoryAxisScale } = args;\n    const seriesData =\n      this.isGroupedVariant(variant) || this.isStackedVariant(variant) ? series.data : [series];\n    const categories =\n      categoryAxisScale === 'shared' ? data.categories : this.getCategories(args, seriesData);\n\n    return {\n      categories,\n      first: categories[0],\n      last: categories[categories.length - 1],\n      count: categories.length,\n    };\n  }\n\n  /**\n   * Calculate the values and stats used for the value axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeValueInfo(series, context, categories) {\n    const { args, data } = context;\n    const { variant, valueAxisScale } = args;\n    const { categoryProperty = DEFAULT_CATEGORY_PROPERTY } = args;\n    const { valueProperty = DEFAULT_VALUE_PROPERTY } = args;\n    const isSharedScale = valueAxisScale === 'shared';\n\n    let values;\n\n    if (this.isStackedVariant(variant)) {\n      values = getSeriesTotals(series.data, categories, categoryProperty, valueProperty);\n    } else if (this.isGroupedVariant(variant)) {\n      values = compact(\n        flatten(\n          // @ts-expect-error: follow up on this\n          series.data.map((group) =>\n            getSeriesData(group.data, categories, categoryProperty, valueProperty)\n          )\n        )\n      );\n    } else {\n      values = getSeriesData(series.data, categories, categoryProperty, valueProperty);\n    }\n\n    return {\n      values,\n      minimum: isSharedScale ? data.minValue : Math.min(...values),\n      maximum: isSharedScale ? data.maxValue : Math.max(...values),\n    };\n  }\n\n  /**\n   * Calculate the ticks used for the category axis.\n   *\n   * Each tick may have the following properties:\n   *\n   * `text`\n   * : The formatted text for this tick.\n   *\n   * `type`\n   * : The type of tick (e.g. `primary`) or `undefined` if no type is specified.\n   *\n   * `position`\n   * : A value from 0 to 1 indicating the position of the tick along the axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeCategoryAxisTicks(context, categoryInfo, axisConfig) {\n    const { categoryAxisFormatter } = context.args;\n    const isTimeAxis = axisConfig.type === 'time';\n    const model = new echarts.Model({\n      // defaults from `coord/axisDefault.ts` relevant to the scale\n      ...(isTimeAxis && {\n        splitNumber: 6,\n      }),\n      ...axisConfig,\n    });\n    // @ts-expect-error: follow up on this\n    model.ecModel = this.chart.getModel();\n\n    if (!isTimeAxis) {\n      // @ts-expect-error: follow up on this\n      model.getCategories = () => categoryInfo.categories;\n    }\n\n    const scale = echarts.helper.createScale(\n      [categoryInfo.first.valueOf(), categoryInfo.last.valueOf()],\n      model\n    );\n    // @ts-expect-error: follow up on this\n    const ticks = scale.getTicks(false).map((tick, index) => ({\n      // prettier not formatting nested ternaries properly, so turn it off\n      // prettier-ignore\n      ...parseAxisLabel(isTimeAxis\n          // @ts-expect-error: follow up on this\n          ? scale.getFormattedLabel(tick, index, categoryAxisFormatter)\n          : categoryAxisFormatter\n            ? categoryAxisFormatter(scale.getLabel(tick))\n            : scale.getLabel(tick)\n        ),\n      position: scale.normalize(tick.value),\n    }));\n\n    if (isShowingAxisLabel(axisConfig, 'Min')) {\n      ticks.shift();\n    }\n\n    if (isShowingAxisLabel(axisConfig, 'Max')) {\n      ticks.pop();\n    }\n\n    return ticks;\n  }\n\n  /**\n   * Calculate the labels used for the value axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeValueAxisTicks(context, valueInfo, axisConfig) {\n    const { args } = context;\n    const formatter = args.valueAxisFormatter ?? echarts.format.addCommas;\n    // prettier not formatting nested ternaries properly, so turn it off\n    // prettier-ignore\n    const minValue =\n      axisConfig.min == null\n        ? Math.min(0, valueInfo.minimum)\n        : axisConfig.min === 'dataMin'\n          ? valueInfo.minimum\n          : axisConfig.min;\n    // prettier not formatting nested ternaries properly, so turn it off\n    // prettier-ignore\n    const maxValue =\n      axisConfig.max == null\n        ? valueInfo.maximum\n        : axisConfig.max === 'dataMax'\n          ? valueInfo.maximum\n          : axisConfig.max;\n    const scale = echarts.helper.createScale([minValue, maxValue], axisConfig);\n    // @ts-expect-error: follow up on this\n    return scale.getTicks(false).map((tick) => ({\n      label: tick.value != null ? formatter(tick.value) : '',\n      position: scale.normalize(tick.value),\n    }));\n  }\n\n  /**\n   * Generates the plot config for a single plot on this chart.\n   */\n  // @ts-expect-error: follow up on this\n  generatePlotConfig(series, layout, context, gridIndex) {\n    const { args, styles, data } = context;\n    const { noDataText, seriesConfig } = args;\n\n    if ((!series.data || series.data.length == 0) && noDataText) {\n      return undefined;\n    }\n\n    const { variant, orientation, colorMap } = args;\n    const { categoryAxisType = 'category' } = args;\n    const { categoryAxisMaxLabelCount } = args;\n    const { categoryAxisFormatter, valueAxisFormatter } = args;\n    const { valueAxisScale, valueAxisMax } = args;\n    const isHorizontal = orientation === 'horizontal';\n    const isBarVariant = this.isBarVariant(variant);\n    const isAreaVariant = this.isAreaVariant(variant);\n    const isStackedVariant = this.isStackedVariant(variant);\n    const isGroupedOrStacked = this.isGroupedVariant(variant) || isStackedVariant;\n\n    // Analyze the data\n    const categoryInfo = this.computeCategoryInfo(series, context);\n    const valueInfo = this.computeValueInfo(series, context, categoryInfo.categories);\n\n    // Resolve axis styles\n    const yAxisStyle = resolveStyle(styles.yAxis, context.layout);\n    const xAxisStyle = resolveStyle(styles.xAxis, context.layout);\n    const valueAxisStyle = isHorizontal ? xAxisStyle : yAxisStyle;\n    const categoryAxisStyle = isHorizontal ? yAxisStyle : xAxisStyle;\n\n    // Configure value axis\n    const valueAxisConfig = {\n      gridIndex,\n      type: 'value',\n      max:\n        // prettier not formatting nested ternaries properly, so turn it off\n        // prettier-ignore\n        !isGroupedOrStacked && valueAxisScale === 'shared'\n          ? valueAxisMax && valueAxisMax !== 'dataMax'\n            ? valueAxisMax\n            : data.maxValue\n          : valueAxisMax !== 'dataMaxRoundedUp'\n            ? valueAxisMax\n            : undefined,\n      axisLabel: {\n        ...(valueAxisFormatter &&\n          {\n            // formatter: (value, axisIndex) => valueAxisFormatter(value, 'axis', axisIndex),\n          }),\n        // margin between the axis label and the axis line\n        margin: isHorizontal ? valueAxisStyle.marginTop : valueAxisStyle.marginRight,\n        ...this.generateAxisLabelConfig(layout, valueAxisStyle),\n      },\n    };\n    const valueTicks = this.computeValueAxisTicks(context, valueInfo, valueAxisConfig);\n\n    // Configure category axis\n    const categoryAxisConfig = {\n      gridIndex,\n      type: categoryAxisType,\n      // Render labels top-to-bottom when using horizontal orientation\n      inverse: isHorizontal,\n      ...(categoryAxisType !== 'time' && {\n        data: categoryInfo.categories,\n      }),\n      axisLabel: {\n        ...(categoryAxisFormatter &&\n          {\n            // formatter: (value, axisIndex) => categoryAxisFormatter(value, 'axis', axisIndex),\n          }),\n        // Determine how many categories are shown on the axis\n        interval:\n          categoryAxisMaxLabelCount && categoryInfo.count > categoryAxisMaxLabelCount\n            ? Math.ceil(categoryInfo.count / categoryAxisMaxLabelCount) - 1\n            : 0,\n        ...(!isHorizontal && {\n          overflow: 'break',\n        }),\n        // margin between the axis label and the axis line\n        margin: isHorizontal ? categoryAxisStyle.marginRight : categoryAxisStyle.marginTop,\n      },\n    };\n    const categoryTicks = this.computeCategoryAxisTicks(context, categoryInfo, categoryAxisConfig);\n\n    // Configure the Y axis\n    const yAxisConfig = {};\n    const yAxisInfo = this.computeYAxisInfo(\n      yAxisStyle,\n      isHorizontal ? categoryTicks : valueTicks,\n      isHorizontal\n    );\n\n    layout = this.addAxisPointer(context, layout, yAxisConfig, yAxisInfo, 'y');\n\n    // Configure the X axis\n    const xAxisConfig = {};\n    const xAxisInfo = this.computeXAxisInfo(\n      args,\n      layout,\n      xAxisStyle,\n      isHorizontal ? valueTicks : categoryTicks,\n      yAxisInfo,\n      isHorizontal\n    );\n\n    layout = this.addAxisPointer(context, layout, xAxisConfig, xAxisInfo, 'x');\n\n    // Update the axis label for the category axis\n    categoryAxisConfig.axisLabel = {\n      ...categoryAxisConfig.axisLabel,\n      width: xAxisInfo.maxLabelWidth,\n      ...this.generateAxisLabelConfig(layout, isHorizontal ? yAxisStyle : xAxisStyle),\n    };\n\n    // Setup base configurations\n    const seriesBaseConfig = {\n      ...seriesConfig,\n      xAxisIndex: gridIndex,\n      yAxisIndex: gridIndex,\n      type: isBarVariant ? 'bar' : 'line',\n      ...(isAreaVariant && {\n        areaStyle: {},\n      }),\n      ...(!isBarVariant && {\n        symbol: 'circle',\n        symbolSize: isAreaVariant ? 6 : 8,\n      }),\n      ...(!isBarVariant && {\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 3,\n            shadowColor: '#000000',\n            shadowOffsetX: 1,\n            shadowOffsetY: 1,\n          },\n        },\n      }),\n      // if this is changed, update the select handler in `configureChart`\n      selectedMode: 'single',\n      // Allow the double-clicking on the area to be the same as if on the line\n      triggerLineEvent: true,\n      z: 20,\n    };\n\n    // Configure final grid style\n    const plotStyle = resolveStyle(styles.plot, context.layout);\n    const gridInfo = {\n      // Not sure why the 1px adjustment is needed to `x`, but it is\n      x: layout.innerX + yAxisInfo.width - 1,\n      y: layout.innerY + yAxisInfo.heightOverflow,\n      width: xAxisInfo.width - xAxisInfo.widthOverflow,\n      height: layout.innerHeight - xAxisInfo.height - yAxisInfo.heightOverflow,\n    };\n\n    return {\n      grid: [gridInfo],\n      yAxis: [\n        {\n          ...yAxisConfig,\n          ...(isHorizontal ? categoryAxisConfig : valueAxisConfig),\n          ...(plotStyle.borderLeftWidth && {\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: plotStyle.borderLeftColor,\n                width: plotStyle.borderLeftWidth,\n                style: plotStyle.borderLeftStyle,\n              },\n            },\n          }),\n        },\n      ],\n      xAxis: [\n        {\n          ...xAxisConfig,\n          ...(isHorizontal ? valueAxisConfig : categoryAxisConfig),\n          ...(plotStyle.borderBottomWidth && {\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: plotStyle.borderBottomColor,\n                width: plotStyle.borderBottomWidth,\n                style: plotStyle.borderBottomStyle,\n              },\n            },\n          }),\n        },\n      ],\n      series: !isGroupedOrStacked\n        ? [\n            {\n              ...seriesBaseConfig,\n              data: computeData(series.data, categoryInfo.categories, args),\n              ...(isBarVariant && {\n                colorBy: 'data',\n              }),\n            },\n          ]\n        : // @ts-expect-error: follow up on this\n          series.data.map((info) => ({\n            ...seriesBaseConfig,\n            name: info.label,\n            // @ts-expect-error: follow up on this\n            data: computeData(info.data, categoryInfo.categories, args).map((item) => ({\n              ...item,\n              ...setItemColor(colorMap, item, info.label),\n            })),\n            ...(isStackedVariant && {\n              stack: 'total',\n            }),\n          })),\n      ...((plotStyle.borderTopWidth || plotStyle.borderRightWidth) && {\n        'graphic.elements': [\n          // The right border for the grid, since ECharts doesn't provide a\n          // setting for it\n          ...(plotStyle.borderRightWidth && [\n            {\n              type: 'line',\n              // NOTE: The adjustment here was eye-balled. Not sure why it's 2.\n              left: gridInfo.x + gridInfo.width - 2,\n              top: gridInfo.y - 3,\n              shape: {\n                y2: gridInfo.height + 1,\n              },\n              style: {\n                stroke: plotStyle.borderRightColor,\n                lineWidth: plotStyle.borderRightWidth,\n              },\n              silent: true,\n              // render above the axis lines of the chart\n              z: 10,\n            },\n          ]),\n          // The top border for the grid, since ECharts doesn't provide a\n          // setting for it\n          ...(plotStyle.borderTopWidth && [\n            {\n              type: 'line',\n              // NOTE: The adjustment here was eye-balled. Not sure why it's 2.5\n              left: gridInfo.x - 2.5,\n              top: gridInfo.y - 2.5,\n              shape: {\n                x2: gridInfo.width,\n              },\n              style: {\n                stroke: plotStyle.borderTopColor,\n                lineWidth: plotStyle.borderTopWidth,\n              },\n              silent: true,\n              // render above the axis lines of the chart\n              z: 10,\n            },\n          ]),\n        ],\n      }),\n    };\n  }\n\n  /**\n   * Generates the configuration for an axis label.\n   */\n  // @ts-expect-error: follow up on this\n  generateAxisLabelConfig(layout, style) {\n    return {\n      color: style.color,\n      fontStyle: style.fontStyle,\n      fontWeight: style.fontWeight,\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      align: style.textAlign,\n      verticalAlign: style.verticalAlign,\n      backgroundColor: style.backgroundColor,\n      // Safari only parses contituent values, so use \"top\" as a proxy for all\n      borderWidth: style.borderTopWidth,\n      borderColor: style.borderTopColor,\n      borderType: style.borderTopType,\n      borderRadius: style.borderRadius,\n      padding: [style.paddingTop, style.paddingRight, style.paddingBottom, style.paddingLeft],\n    };\n  }\n\n  /**\n   * Adds the configuration for the axis pointer for the `axis` to `config` and\n   * returns an updated `layout`.\n   */\n  // @ts-expect-error: follow up on this\n  addAxisPointer(context, layout, config, axisInfo, axis) {\n    const { args, styles } = context;\n    const name = `${axis}AxisPointer`;\n    const type = args[name];\n\n    if (!type || type === 'none') {\n      return layout;\n    }\n\n    const pointerStyle = resolveStyle(styles[name], context.layout);\n    const labelStyle = resolveStyle(styles[`${name}Label`], context.layout);\n    const labelPosition = args[`${name}Label`] ?? 'bottom';\n    const triggerTooltip = args[`${axis}AxisTooltip`] ?? axis === 'x';\n    const formatter = args[`${axis}AxisFormatter`];\n\n    config.axisPointer = {\n      show: true,\n      type,\n      triggerTooltip,\n      // Render axis line underneath emphasis items\n      z: 0,\n    };\n\n    if (type === 'line') {\n      config.axisPointer.lineStyle = {\n        color: pointerStyle.color,\n        // Use of || is intentional here; use the first non-zero width\n        width:\n          axis === 'x'\n            ? pointerStyle.borderLeftWidth || pointerStyle.borderRightWidth\n            : pointerStyle.borderTopWidth || pointerStyle.borderBottomWidth,\n        type:\n          axis === 'x'\n            ? pointerStyle.borderLeftStyle || pointerStyle.borderRightStyle\n            : pointerStyle.borderTopStyle || pointerStyle.borderBottomStyle,\n        opacity: pointerStyle.opacity,\n      };\n    } else if (type === 'shadow') {\n      config.axisPointer.shadowStyle = {\n        color: pointerStyle.backgroundColor,\n        opacity: pointerStyle.opacity,\n      };\n    }\n\n    config.axisPointer.label =\n      labelPosition === 'none'\n        ? {\n            show: false,\n          }\n        : {\n            ...(formatter &&\n              {\n                // formatter: (params) => formatter(params.value),\n              }),\n            color: labelStyle.color,\n            fontStyle: labelStyle.fontStyle,\n            fontWeight: labelStyle.fontWeight,\n            fontFamily: labelStyle.fontFamily,\n            fontSize: labelStyle.fontSize,\n            backgroundColor: labelStyle.backgroundColor,\n            // Safari only parses contituent values, so use \"top\" as a proxy for all\n            borderWidth: labelStyle.borderTopWidth,\n            borderColor: labelStyle.borderTopColor,\n            borderType: labelStyle.borderTopType,\n            borderRadius: labelStyle.borderRadius,\n            padding: [\n              labelStyle.paddingTop,\n              labelStyle.paddingRight,\n              labelStyle.paddingBottom,\n              labelStyle.paddingLeft,\n            ],\n          };\n\n    const newLayout = { ...layout };\n    const labelSize =\n      axis === 'x'\n        ? axisInfo.height +\n          labelStyle.paddingTop +\n          labelStyle.paddingBottom +\n          labelStyle.borderTopWidth +\n          labelStyle.borderBottomWidth\n        : axisInfo.width +\n          labelStyle.paddingLeft +\n          labelStyle.paddingRight +\n          labelStyle.borderLeftWidth +\n          labelStyle.borderRightWidth;\n    const labelMargins =\n      axis === 'x'\n        ? labelStyle.marginTop + labelStyle.marginBottom\n        : labelStyle.marginLeft + labelStyle.marginRight;\n\n    switch (labelPosition) {\n      case 'top':\n        newLayout.innerHeight -= labelSize + labelMargins;\n        newLayout.innerY += axisInfo.height + labelMargins;\n        config.axisPointer.label.margin = labelSize + labelStyle.marginTop - layout.innerHeight;\n        break;\n\n      case 'right':\n        newLayout.innerWidth -= labelSize + labelMargins;\n        config.axisPointer.label.margin = labelSize - labelStyle.marginLeft - layout.innerWidth;\n        break;\n\n      case 'bottom':\n        newLayout.innerHeight -= labelStyle.marginTop;\n        config.axisPointer.label.margin = labelStyle.marginTop;\n        break;\n\n      case 'left':\n        config.axisPointer.label.margin = labelStyle.marginRight;\n        break;\n    }\n\n    return newLayout;\n  }\n\n  /**\n   * Generates text to overlay on each cell of the chart, if any.\n   */\n  // @ts-expect-error: follow up on this\n  generateTextOverlayConfig(series, args, layout, style) {\n    const { noDataText } = args;\n\n    return (!series.data || series.data.length == 0) && noDataText\n      ? this.generateTextConfig(\n          noDataText,\n          // @ts-expect-error: follow up on this\n          {\n            width: layout.innerWidth,\n            height: layout.innerHeight,\n            x: layout.innerX,\n            y: layout.innerY,\n          },\n          style\n        )\n      : undefined;\n  }\n\n  /**\n   * Computes style and metrics about the Y axis for charts that use an Y axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeYAxisInfo(style, ticks, isHorizontal) {\n    // HACK TODO: When ticks are too close to each other, the following tick\n    //            will be hidden. This can cause the Y axis to calculate the\n    //            width wrong if the tick that is hidden has a wider width than\n    //            the rest of the ticks.\n    //\n    //            To see this, set the `@valueAxisMax` to a number slightly\n    //            higher than the default maximum value. For example, if the\n    //            normal top tick is 15000, set it to `15400.111111`. The extra\n    //            1's will increase the width of the axis, but then this tick\n    //            will be hidden, so it will create a bunch of extra space.\n    //\n    //            In reality, we should use a label collision detection formula\n    //            here, but that requires a lot more work and this is a fairly\n    //            rare edge case in our charts, so I'm just using the magic\n    //            number of 3%. When ticks are closer than 3% of the axis\n    //            length, then the second tick is hidden. [twl 17.Mar.23]\n    const renderedTicks = [...ticks].reduce((ticks, tick) => {\n      if (!ticks.length || tick.position - ticks[ticks.length - 1].position > 0.03) {\n        ticks.push(tick);\n      }\n\n      return ticks;\n    }, []);\n    // @ts-expect-error: follow up on this\n    const labelMetrics = computeMaxTextMetrics(\n      // @ts-expect-error: follow up on this\n      renderedTicks.map((tick) => tick.label),\n      style\n    );\n    const width = labelMetrics.width + style.marginLeft + style.marginRight;\n\n    // Handle when label extends past the top of the axis.\n    //\n    // NOTE: To be fully accurate, we should use the `position` like we do in\n    //       `computeXAxisInfo`. However, since we compute the Y axis info first\n    //       we don't have an accurate axis height and for these charts we're\n    //       always rendering a label at the top of the axis anyway, so the\n    //       top tick position should always be 1. [twl 17.Mar.23]\n    const topTick = renderedTicks[renderedTicks.length - 1];\n    const topTickHeight = computeTextMetrics(topTick.label, style).height;\n    const heightOverflow = isHorizontal ? 0 : Math.max(0, topTickHeight / 2);\n\n    return {\n      width,\n      // NOTE: no height returned because we need to know the X axis height to\n      //       determine that and `computeXAxisInfo` needs the result from this\n      //       function to calculate its result. We don't use the Y axis height\n      //       currently in the code, so this is fine. [twl 16.Nov.22]\n      labelMetrics,\n      heightOverflow,\n    };\n  }\n\n  /**\n   * Computes style and metrics about the X axis for charts that use an X axis.\n   */\n  // @ts-expect-error: follow up on this\n  computeXAxisInfo(args, layout, style, ticks, yAxisInfo, isHorizontal) {\n    const { categoryAxisMaxLabelCount, categoryAxisType } = args;\n    const maxLabelCount = Math.min(categoryAxisMaxLabelCount ?? ticks.length, ticks.length);\n    const width =\n      layout.innerWidth - yAxisInfo.width - layout.borderLeftWidth - layout.borderRightWidth;\n    const lineWidth = isHorizontal ? 0 : 1;\n    const maxLabelWidth = width / (isHorizontal ? ticks.length : maxLabelCount);\n\n    // TODO: If we want to be precise, we should be passing in a custom style\n    //       for each tick, since if a tick has a `type` of `primary`, it gets\n    //       rendered via the primary axis tick style as defined by\n    //       `axisLabel.rich.primary` in the Echarts config. However, the\n    //       default is only to make the font bold, which only causes a pixel or\n    //       two different in the final value. Skipping this for now, since it\n    //       requires a bunch of refactoring to make this work. [twl 17.Mar.23]\n    const labelMetrics = computeMaxTextMetrics(\n      // @ts-expect-error: follow up on this\n      ticks.map((tick) => tick.label),\n      style,\n      maxLabelWidth\n    );\n    const height = labelMetrics.height + style.marginTop + style.marginBottom + lineWidth;\n\n    // Handle when label extends past end of axis\n    const lastTick = ticks[ticks.length - 1];\n    const lastLabelWidth = computeTextMetrics(lastTick.label, style).width;\n    const widthOverflow =\n      !isHorizontal && categoryAxisType !== 'time'\n        ? 0\n        : Math.max(0, lastLabelWidth / 2 - (width - lastTick.position * width));\n\n    return {\n      width,\n      height,\n      labelMetrics,\n      maxLabelWidth,\n      widthOverflow,\n    };\n  }\n}\n"],"names":["DEFAULT_CATEGORY_PROPERTY","DEFAULT_VALUE_PROPERTY","setItemColor","colorMap","item","color","itemStyle","isShowingAxisLabel","axisConfig","labelType","axisLabel","type","computeData","data","categories","args","categoryProperty","categoryAxisType","orientation","series","getSeriesData","map","value","name","BarChartModifier","AbstractChartModifier","g","prototype","tracked","i","void 0","defaultStyles","styles","plot","xAxis","font","textAlign","marginTop","yAxis","marginRight","xAxisPointer","border","backgroundColor","opacity","yAxisPointer","xAxisPointerLabel","borderRadius","padding","margin","yAxisPointerLabel","drillUpButton","isGroupedVariant","variant","includes","isStackedVariant","isBarVariant","isAreaVariant","getCategories","categoryAxisSort","getUniqueDatasetValues","sort","reverse","console","warn","date1","date2","valueOf","formatTooltipParams","params","elementType","valueAxisFormatter","echarts","format","addCommas","categoryAxisFormatter","missingCategoryFormat","missingValueFormat","category","configureChart","chart","allSeries","categoryAxisScale","tooltipFormatter","onSelect","config","context","buildLayout","setOption","tooltip","trigger","formatter","length","param","dataset","notMerge","on","event","fromAction","fromActionPayload","isFromClick","seriesIndex","dataIndex","dispatchAction","selected","selections","Object","values","counts","countBy","false","drillPath","pushObject","createContextData","rotateData","valueAxisScale","valueProperty","seriesData","rotateDataSeries","title","reduce","pathIndex","label","minValue","computeStatistic","maxValue","addTitle","buttonLayout","addDrillUpButton","buttonWidth","layout","width","buttonHeight","height","titleLayout","titleHeight","heightDifference","y","top","left","drillUpButtonText","style","resolveStyle","titleStyle","chartTitle","xMargins","marginLeft","yMargins","marginBottom","buttonConfig","generateDrillUpButtonConfig","mergeAtPaths","buttonBox","children","shape","x","text","textMetrics","computeTextMetrics","paddingLeft","paddingRight","fontHeight","paddingTop","paddingBottom","r","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","stroke","borderColor","fill","fontStyle","fontWeight","fontSize","fontFamily","textConfig","distance","inside","position","onclick","popObject","getLegendLabels","info","computeCategoryInfo","first","last","count","computeValueInfo","isSharedScale","getSeriesTotals","compact","flatten","group","minimum","Math","min","maximum","max","computeCategoryAxisTicks","categoryInfo","isTimeAxis","model","Model","splitNumber","ecModel","getModel","scale","helper","createScale","ticks","getTicks","tick","index","parseAxisLabel","getFormattedLabel","getLabel","normalize","shift","pop","computeValueAxisTicks","valueInfo","generatePlotConfig","gridIndex","noDataText","seriesConfig","undefined","categoryAxisMaxLabelCount","valueAxisMax","isHorizontal","isGroupedOrStacked","yAxisStyle","xAxisStyle","valueAxisStyle","categoryAxisStyle","valueAxisConfig","generateAxisLabelConfig","valueTicks","categoryAxisConfig","inverse","interval","ceil","overflow","categoryTicks","yAxisConfig","yAxisInfo","computeYAxisInfo","addAxisPointer","xAxisConfig","xAxisInfo","computeXAxisInfo","maxLabelWidth","seriesBaseConfig","xAxisIndex","yAxisIndex","areaStyle","symbol","symbolSize","emphasis","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","selectedMode","triggerLineEvent","z","plotStyle","gridInfo","innerX","innerY","heightOverflow","widthOverflow","innerHeight","grid","borderLeftWidth","axisLine","show","lineStyle","borderLeftColor","borderLeftStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","colorBy","stack","borderTopWidth","borderRightWidth","y2","borderRightColor","lineWidth","silent","x2","borderTopColor","align","verticalAlign","borderWidth","borderType","borderTopType","axisInfo","axis","pointerStyle","labelStyle","labelPosition","triggerTooltip","axisPointer","borderRightStyle","borderTopStyle","shadowStyle","newLayout","labelSize","labelMargins","innerWidth","generateTextOverlayConfig","generateTextConfig","renderedTicks","push","labelMetrics","computeMaxTextMetrics","topTick","topTickHeight","maxLabelCount","lastTick","lastLabelWidth"],"mappings":"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"}