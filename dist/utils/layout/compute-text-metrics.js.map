{"version":3,"file":"compute-text-metrics.js","sources":["../../../src/utils/layout/compute-text-metrics.ts"],"sourcesContent":["const fontHeightText = 'ABCDEFGHIJKLMNOPQRSTUVWYXZabcdefghijklmnopqrstuvwxyz';\n\ntype TextMetrics = {\n  height: number;\n  width: number;\n  fontHeight: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: string;\n};\n\n/**\n * Returns the width and height of the `text` when rendered with the `style`.\n *\n * @param {string} text  A string to render as text\n * @param {object} style An object containing CSS properties\n *\n * @return {object} An object specifying the `width` and `height` of the\n *                  rendered text in pixels\n */\nfunction computeTextMetrics(text: string, style: TextMetrics) {\n  const canvas = document.createElement('canvas');\n\n  // These need to be big enough to render `stringToMeasure`\n  canvas.setAttribute('height', '1000');\n  canvas.setAttribute('width', '400');\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    throw new Error('Failed to get canvas context');\n  }\n\n  ctx.font = `${style.fontWeight ?? 'normal'} ${style.fontSize}px ${style.fontFamily}`;\n\n  // Have to use a actual bounding box instead of font bounding box, since font\n  // bounding box required turning on a flag in Firefox. Once\n  // fontBoundingBoxAscent and fontBoundingBoxDescent are implemented on all our\n  // target browsers, then this should be updated.\n  const metrics = ctx.measureText(text);\n\n  let fontHeight;\n\n  if (metrics.fontBoundingBoxAscent != null) {\n    fontHeight = metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n  } else {\n    const { actualBoundingBoxAscent, actualBoundingBoxDescent } = ctx.measureText(fontHeightText);\n\n    // 1.1 was found through trial and error to give a reasonable approximation\n    // in Firefox, which is the only browser that should be executing this code\n    fontHeight = (actualBoundingBoxAscent + actualBoundingBoxDescent) * 1.1;\n  }\n\n  return {\n    height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    width: metrics.width,\n    fontHeight,\n  };\n}\n\nexport default computeTextMetrics;\n"],"names":["fontHeightText","computeTextMetrics","text","style","canvas","document","createElement","setAttribute","ctx","getContext","Error","font","fontWeight","fontSize","fontFamily","metrics","measureText","fontHeight","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","height","width"],"mappings":"AAAA,MAAMA,cAAc,GAAG,sDAAsD,CAAA;AAW7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,IAAY,EAAEC,KAAkB,EAAE;AAC5D,EAAA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAA;;AAE/C;AACAF,EAAAA,MAAM,CAACG,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;AACrCH,EAAAA,MAAM,CAACG,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;AAEnC,EAAA,MAAMC,GAAG,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC,CAAA;EAEnC,IAAI,CAACD,GAAG,EAAE;AACR,IAAA,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC,CAAA;AACjD,GAAA;AAEAF,EAAAA,GAAG,CAACG,IAAI,GAAG,CAAGR,EAAAA,KAAK,CAACS,UAAU,IAAI,QAAQ,CAAA,CAAA,EAAIT,KAAK,CAACU,QAAQ,MAAMV,KAAK,CAACW,UAAU,CAAE,CAAA,CAAA;;AAEpF;AACA;AACA;AACA;AACA,EAAA,MAAMC,OAAO,GAAGP,GAAG,CAACQ,WAAW,CAACd,IAAI,CAAC,CAAA;AAErC,EAAA,IAAIe,UAAU,CAAA;AAEd,EAAA,IAAIF,OAAO,CAACG,qBAAqB,IAAI,IAAI,EAAE;AACzCD,IAAAA,UAAU,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,sBAAsB,CAAA;AAC7E,GAAC,MAAM;IACL,MAAM;MAAEC,uBAAuB;AAAEC,MAAAA,wBAAAA;AAAyB,KAAC,GAAGb,GAAG,CAACQ,WAAW,CAAChB,cAAc,CAAC,CAAA;;AAE7F;AACA;AACAiB,IAAAA,UAAU,GAAG,CAACG,uBAAuB,GAAGC,wBAAwB,IAAI,GAAG,CAAA;AACzE,GAAA;EAEA,OAAO;AACLC,IAAAA,MAAM,EAAEP,OAAO,CAACK,uBAAuB,GAAGL,OAAO,CAACM,wBAAwB;IAC1EE,KAAK,EAAER,OAAO,CAACQ,KAAK;AACpBN,IAAAA,UAAAA;GACD,CAAA;AACH;;;;"}