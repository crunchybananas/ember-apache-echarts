{"version":3,"file":"resolve-style.js","sources":["../../../src/utils/style/resolve-style.ts"],"sourcesContent":["// @ts-expect-error: Remove lodash-es\nimport { mapValues } from 'lodash-es';\nimport formatCssStyleValue from './format-css-style-value.ts';\nimport parseCssStyleValue from './parse-css-style-value.ts';\n\nconst isPixelDimension = /^-?\\d+\\.?\\d*\\px$/;\nconst isPercentDimension = /^-?\\d+\\.?\\d*%+$/;\n\ntype Context = {\n  width: number;\n  height: number;\n};\n\nfunction resolvePercentDimension(value: string, side: string, context?: Context) {\n  const rawValue = parseFloat(value.slice(0, -1)) / 100.0;\n\n  return side.endsWith('Top') || side.endsWith('Bottom')\n    ? rawValue * (context?.height ?? 1)\n    : rawValue * (context?.width ?? 1);\n}\n\ntype Style = {\n  [key: string]: string | number;\n};\n\n/**\n * Parses the CSS values in `style` into a style object containing the\n * constituent values for each composite property (e.g., `marginTop` for the\n * `margin` property), then resolves those values using the `context`.\n *\n * Pixel values are resolved to numbers and percent values are resolved using\n * the `width` and * `height` specified in `context` to a float.\n *\n * @param {object} style   An object containing CSS properties\n * @param {object} context An object specifying the `width` and `height` for\n *                         resolving the style\n *\n * @return {object} An object containing the resolved CSS properties\n */\nfunction resolveStyle(style: Style, context: Context) {\n  const result = parseCssStyleValue(formatCssStyleValue(style));\n  // @ts-expect-error: Can we use normal browser types?\n  return mapValues(result, (value, property) =>\n    isPixelDimension.test(value)\n      ? parseFloat(value.slice(0, -2))\n      : isPercentDimension.test(value)\n        ? resolvePercentDimension(value, property, context)\n        : value\n  );\n}\n\nexport default resolveStyle;\n"],"names":["isPixelDimension","isPercentDimension","resolvePercentDimension","value","side","context","rawValue","parseFloat","slice","endsWith","height","width","resolveStyle","style","result","parseCssStyleValue","formatCssStyleValue","mapValues","property","test"],"mappings":";;;;AAAA;AAKA,MAAMA,gBAAgB,GAAG,kBAAkB,CAAA;AAC3C,MAAMC,kBAAkB,GAAG,iBAAiB,CAAA;AAO5C,SAASC,uBAAuBA,CAACC,KAAa,EAAEC,IAAY,EAAEC,OAAiB,EAAE;AAC/E,EAAA,MAAMC,QAAQ,GAAGC,UAAU,CAACJ,KAAK,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;AAEvD,EAAA,OAAOJ,IAAI,CAACK,QAAQ,CAAC,KAAK,CAAC,IAAIL,IAAI,CAACK,QAAQ,CAAC,QAAQ,CAAC,GAClDH,QAAQ,IAAID,OAAO,EAAEK,MAAM,IAAI,CAAC,CAAC,GACjCJ,QAAQ,IAAID,OAAO,EAAEM,KAAK,IAAI,CAAC,CAAC,CAAA;AACtC,CAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAY,EAAER,OAAgB,EAAE;EACpD,MAAMS,MAAM,GAAGC,kBAAkB,CAACC,mBAAmB,CAACH,KAAK,CAAC,CAAC,CAAA;AAC7D;EACA,OAAOI,SAAS,CAACH,MAAM,EAAE,CAACX,KAAK,EAAEe,QAAQ,KACvClB,gBAAgB,CAACmB,IAAI,CAAChB,KAAK,CAAC,GACxBI,UAAU,CAACJ,KAAK,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAC9BP,kBAAkB,CAACkB,IAAI,CAAChB,KAAK,CAAC,GAC5BD,uBAAuB,CAACC,KAAK,EAAEe,QAAQ,EAAEb,OAAO,CAAC,GACjDF,KACR,CAAC,CAAA;AACH;;;;"}